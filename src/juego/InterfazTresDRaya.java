package juego;

import java.awt.Color;
import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;

/**
 * Interfaz grafica del 3D raya.
 * @title Interfaz grafica calculadora
 * @author Carlos Aguirre V.
 * @version 13-02-2018
 */
public class InterfazTresDRaya extends javax.swing.JFrame {

    private Principal principal;
    private TresEnRaya juego = new TresEnRaya(false);
    private ArrayList<JButton> listadoBotones = new ArrayList<JButton>();
    private Icon imgBotonX;
    private Icon imgBotonO;
    private Color colorGanador = Color.ORANGE;
    private String nombreJ1;
    private String nombreJ2;
    private byte numeroRondas;
    private byte rondaActual;
    private byte partidasGanadasJ1;
    private byte partidasGanadasJ2;
    private byte tablero;
    private int numeroTema;
    
    /**
     * Crea una nueva forma e inicializa los campos.
     */
    public InterfazTresDRaya(String j1, String j2, byte rondas, Principal mPrincipal, int tema) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.principal = mPrincipal;
        this.setListadoBotones();
        this.nombreJ1 = j1;
        this.nombreJ2 = j2;
        this.numeroRondas = rondas;
        this.mostrarOcultarRondas();
        this.tablero = (byte)0;
        this.refrescar();
        this.numeroTema = tema;
        this.setTema();
        pintarBotonTablero();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanelSuperior = new javax.swing.JPanel();
        lbJugador = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        etiquetaTurno = new javax.swing.JLabel();
        etiquetaJugador = new javax.swing.JLabel();
        mostrarRonda = new javax.swing.JLabel();
        etiquetaRonda = new javax.swing.JLabel();
        jPanelTablero = new javax.swing.JPanel();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        jPanelInferior = new javax.swing.JPanel();
        etiquetaConsola = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnResetear = new javax.swing.JButton();
        btnResetear1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnTablero1 = new javax.swing.JButton();
        btnTablero2 = new javax.swing.JButton();
        btnTablero3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("3D Raya");
        setResizable(false);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));

        jPanelSuperior.setBackground(new java.awt.Color(230, 140, 2));

        lbJugador.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        lbJugador.setForeground(new java.awt.Color(1, 1, 1));
        lbJugador.setText("Te toca:");

        jLabel2.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(1, 1, 1));
        jLabel2.setText("Turno:");

        etiquetaTurno.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        etiquetaTurno.setForeground(new java.awt.Color(254, 254, 254));
        etiquetaTurno.setText("0");

        etiquetaJugador.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        etiquetaJugador.setForeground(new java.awt.Color(254, 254, 254));
        etiquetaJugador.setText("...");

        mostrarRonda.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        mostrarRonda.setForeground(new java.awt.Color(1, 1, 1));
        mostrarRonda.setText("Ronda:");

        etiquetaRonda.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        etiquetaRonda.setForeground(new java.awt.Color(254, 254, 254));
        etiquetaRonda.setText("0");

        javax.swing.GroupLayout jPanelSuperiorLayout = new javax.swing.GroupLayout(jPanelSuperior);
        jPanelSuperior.setLayout(jPanelSuperiorLayout);
        jPanelSuperiorLayout.setHorizontalGroup(
            jPanelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbJugador)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etiquetaJugador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mostrarRonda)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etiquetaRonda, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etiquetaTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelSuperiorLayout.setVerticalGroup(
            jPanelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(etiquetaTurno)
                    .addComponent(mostrarRonda)
                    .addComponent(etiquetaRonda)
                    .addComponent(etiquetaJugador)
                    .addComponent(lbJugador))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbJugador.getAccessibleContext().setAccessibleName("");
        lbJugador.getAccessibleContext().setAccessibleDescription("");
        jLabel2.getAccessibleContext().setAccessibleName("");
        etiquetaTurno.getAccessibleContext().setAccessibleName("Turno.");
        etiquetaTurno.getAccessibleContext().setAccessibleDescription("Define cual es el turno actual.");
        etiquetaJugador.getAccessibleContext().setAccessibleName("Jugador.");
        etiquetaJugador.getAccessibleContext().setAccessibleDescription("Define a que jugador le toca jugar ahora.");
        mostrarRonda.getAccessibleContext().setAccessibleName("");
        mostrarRonda.getAccessibleContext().setAccessibleDescription("");
        etiquetaRonda.getAccessibleContext().setAccessibleName("Ronda.");
        etiquetaRonda.getAccessibleContext().setAccessibleDescription("Define en que ronda estamos ahora.");

        jPanelTablero.setBackground(new java.awt.Color(111, 40, 0));
        jPanelTablero.setLayout(new java.awt.GridLayout(3, 3, 10, 10));

        btn1.setBackground(new java.awt.Color(254, 254, 254));
        btn1.setFont(new java.awt.Font("Noto Sans", 1, 100)); // NOI18N
        btn1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.darkGray, java.awt.Color.white));
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });
        jPanelTablero.add(btn1);
        btn1.getAccessibleContext().setAccessibleName("Botón uno.");
        btn1.getAccessibleContext().setAccessibleDescription("Primero empezando por arriba.");

        btn2.setBackground(new java.awt.Color(254, 254, 254));
        btn2.setFont(new java.awt.Font("Noto Sans", 1, 100)); // NOI18N
        btn2.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.darkGray, java.awt.Color.white));
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });
        jPanelTablero.add(btn2);
        btn2.getAccessibleContext().setAccessibleName("Botón dos.");
        btn2.getAccessibleContext().setAccessibleDescription("Segundo empezando por arriba.");

        btn3.setBackground(new java.awt.Color(254, 254, 254));
        btn3.setFont(new java.awt.Font("Noto Sans", 1, 100)); // NOI18N
        btn3.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.darkGray, java.awt.Color.white));
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });
        jPanelTablero.add(btn3);
        btn3.getAccessibleContext().setAccessibleName("Botón tres.");
        btn3.getAccessibleContext().setAccessibleDescription("Tercero empezando por arriba.");

        btn4.setBackground(new java.awt.Color(254, 254, 254));
        btn4.setFont(new java.awt.Font("Noto Sans", 1, 100)); // NOI18N
        btn4.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.darkGray, java.awt.Color.white));
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });
        jPanelTablero.add(btn4);
        btn4.getAccessibleContext().setAccessibleName("Botón cuatro.");
        btn4.getAccessibleContext().setAccessibleDescription("Primero empezando por el medio.");

        btn5.setBackground(new java.awt.Color(254, 254, 254));
        btn5.setFont(new java.awt.Font("Noto Sans", 1, 100)); // NOI18N
        btn5.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.darkGray, java.awt.Color.white));
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });
        jPanelTablero.add(btn5);
        btn5.getAccessibleContext().setAccessibleName("Botón cinco.");
        btn5.getAccessibleContext().setAccessibleDescription("Botón central.");

        btn6.setBackground(new java.awt.Color(254, 254, 254));
        btn6.setFont(new java.awt.Font("Noto Sans", 1, 100)); // NOI18N
        btn6.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.darkGray, java.awt.Color.white));
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });
        jPanelTablero.add(btn6);
        btn6.getAccessibleContext().setAccessibleName("Botón seis.");
        btn6.getAccessibleContext().setAccessibleDescription("Tercero empezando por el medio.");

        btn7.setBackground(new java.awt.Color(254, 254, 254));
        btn7.setFont(new java.awt.Font("Noto Sans", 1, 100)); // NOI18N
        btn7.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.darkGray, java.awt.Color.white));
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });
        jPanelTablero.add(btn7);
        btn7.getAccessibleContext().setAccessibleName("Botón siete.");
        btn7.getAccessibleContext().setAccessibleDescription("Primero empezando por abajo.");

        btn8.setBackground(new java.awt.Color(254, 254, 254));
        btn8.setFont(new java.awt.Font("Noto Sans", 1, 100)); // NOI18N
        btn8.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.darkGray, java.awt.Color.white));
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });
        jPanelTablero.add(btn8);
        btn8.getAccessibleContext().setAccessibleName("Botón ocho.");
        btn8.getAccessibleContext().setAccessibleDescription("Segundo empezando por abajo.");

        btn9.setBackground(new java.awt.Color(254, 254, 254));
        btn9.setFont(new java.awt.Font("Noto Sans", 1, 100)); // NOI18N
        btn9.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.darkGray, java.awt.Color.white));
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });
        jPanelTablero.add(btn9);
        btn9.getAccessibleContext().setAccessibleName("Botón nueve.");
        btn9.getAccessibleContext().setAccessibleDescription("Tercero empezando por abajo.");

        jPanelInferior.setBackground(new java.awt.Color(70, 150, 250));
        jPanelInferior.setForeground(new java.awt.Color(203, 203, 203));

        etiquetaConsola.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        etiquetaConsola.setForeground(new java.awt.Color(254, 254, 254));
        etiquetaConsola.setText("...");

        jLabel6.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(1, 1, 1));
        jLabel6.setText("Consola:");

        btnResetear.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        btnResetear.setText("Reiniciar");
        btnResetear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetearActionPerformed(evt);
            }
        });

        btnResetear1.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        btnResetear1.setText("Menu");
        btnResetear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetear1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelInferiorLayout = new javax.swing.GroupLayout(jPanelInferior);
        jPanelInferior.setLayout(jPanelInferiorLayout);
        jPanelInferiorLayout.setHorizontalGroup(
            jPanelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInferiorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelInferiorLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(etiquetaConsola, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelInferiorLayout.createSequentialGroup()
                        .addComponent(btnResetear1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnResetear, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelInferiorLayout.setVerticalGroup(
            jPanelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInferiorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(etiquetaConsola))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnResetear1)
                    .addComponent(btnResetear))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        etiquetaConsola.getAccessibleContext().setAccessibleName("Consola.");
        etiquetaConsola.getAccessibleContext().setAccessibleDescription("Muestra información relativa al estado de la partida.");
        jLabel6.getAccessibleContext().setAccessibleName("");
        btnResetear.getAccessibleContext().setAccessibleDescription("Reinicia el tablero.");
        btnResetear1.getAccessibleContext().setAccessibleDescription("Vuelve al menú principal.");

        jPanel2.setBackground(new java.awt.Color(70, 150, 250));

        btnTablero1.setBackground(java.awt.Color.black);
        btnTablero1.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        btnTablero1.setForeground(java.awt.Color.white);
        btnTablero1.setText("Tablero 1");
        btnTablero1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTablero1ActionPerformed(evt);
            }
        });

        btnTablero2.setBackground(java.awt.Color.white);
        btnTablero2.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        btnTablero2.setForeground(java.awt.Color.black);
        btnTablero2.setText("Tablero 2");
        btnTablero2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTablero2ActionPerformed(evt);
            }
        });

        btnTablero3.setBackground(java.awt.Color.white);
        btnTablero3.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        btnTablero3.setForeground(java.awt.Color.black);
        btnTablero3.setText("Tablero 3");
        btnTablero3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTablero3ActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(254, 254, 254));
        jLabel1.setText("Selecciona tablero:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTablero2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTablero3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTablero1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTablero1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTablero2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(btnTablero3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelSuperior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelInferior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelTablero, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanelSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelTablero, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(13, 13, 13)
                .addComponent(jPanelInferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetearActionPerformed
        this.btnResetear.setText("Reiniciar");
        if(this.juego.isFinPartida()){resetearTablero();}
        else if(this.juego.getTurno() != 0)
        {
            Seguro seguro = new Seguro(this, true, "¿Resetear tablero seguro?");
            seguro.setVisible(true);

            if(seguro.getRespuesta())
            {
                seguro.cerrar();
                resetearTablero();
            }
            else{seguro.cerrar();}
        }
    }//GEN-LAST:event_btnResetearActionPerformed

    // Creo que setFichaCPU(); se puede poner en refrescar y tomar como referencia los turnos o si ha ganado o perdido para saber si ejecutarlo o no.
    // Refrescar tambien creo que se puede poner de otra forma para que no se repita mucho. Metodo aparte.
    
    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        if(this.setFicha((byte) 0, (byte) 0, (byte) this.tablero)){this.btn1.setIcon(this.getFicha()); refrescar();}
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        if(this.setFicha((byte) 1, (byte) 0, (byte) this.tablero)){this.btn2.setIcon(this.getFicha()); refrescar();}
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        if(this.setFicha((byte) 2, (byte) 0, (byte) this.tablero)){this.btn3.setIcon(this.getFicha()); refrescar();}
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        if(this.setFicha((byte) 0, (byte) 1, (byte) this.tablero)){this.btn4.setIcon(this.getFicha()); refrescar();}
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        if(this.setFicha((byte) 1, (byte) 1, (byte) this.tablero)){this.btn5.setIcon(this.getFicha()); refrescar();}
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        if(this.setFicha((byte) 2, (byte) 1, (byte) this.tablero)){this.btn6.setIcon(this.getFicha()); refrescar();}
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        if(this.setFicha((byte) 0, (byte) 2, (byte) this.tablero)){this.btn7.setIcon(this.getFicha()); refrescar();}
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        if(this.setFicha((byte) 1, (byte) 2, (byte) this.tablero)){this.btn8.setIcon(this.getFicha()); refrescar();}
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        if(this.setFicha((byte) 2, (byte) 2, (byte) this.tablero)){this.btn9.setIcon(this.getFicha()); refrescar();}
    }//GEN-LAST:event_btn9ActionPerformed

    private void btnResetear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetear1ActionPerformed
        Seguro seguro = new Seguro(this, true, "¿Seguro que quieres volver al menú principal?");
        seguro.setVisible(true);
        
        if(seguro.getRespuesta())
        {
            seguro.cerrar();
            this.principal.mostrar();
            this.dispose();
        }
        else{seguro.cerrar();}
    }//GEN-LAST:event_btnResetear1ActionPerformed

    private void btnTablero1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTablero1ActionPerformed
        this.tablero = (byte)0;
        this.pintarBotonTablero();
        this.actualizarTablero();
        this.mostrarCoordenadaGanadora();
    }//GEN-LAST:event_btnTablero1ActionPerformed

    private void btnTablero2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTablero2ActionPerformed
        this.tablero = (byte)1;
        this.pintarBotonTablero();
        this.actualizarTablero();
        this.mostrarCoordenadaGanadora();
    }//GEN-LAST:event_btnTablero2ActionPerformed

    private void btnTablero3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTablero3ActionPerformed
        this.tablero = (byte)2;
        this.pintarBotonTablero();
        this.actualizarTablero();
        this.mostrarCoordenadaGanadora();
    }//GEN-LAST:event_btnTablero3ActionPerformed
    
    // Establece el tema por defecto.
    private void setTema()
    {
        if(this.numeroTema == 0)
        {
            this.imgBotonO = new ImageIcon(getClass().getResource("/recursos/o.png"));
            this.imgBotonX = new ImageIcon(getClass().getResource("/recursos/x.png"));
        }
        else if(this.numeroTema == 1)
        {
            this.imgBotonO = new ImageIcon(getClass().getResource("/recursos/o1.png"));
            this.imgBotonX = new ImageIcon(getClass().getResource("/recursos/x1.png"));
        }
        else if(this.numeroTema == 2)
        {
            this.imgBotonO = new ImageIcon(getClass().getResource("/recursos/o2.png"));
            this.imgBotonX = new ImageIcon(getClass().getResource("/recursos/x2.png"));
        }
        else
        {
            this.imgBotonO = new ImageIcon(getClass().getResource("/recursos/o3.png"));
            this.imgBotonX = new ImageIcon(getClass().getResource("/recursos/x3.png"));
        }
    }
    
    // Esto solo pinta los botones de cambio de tablero.
    private void pintarBotonTablero()
    {
        if(this.tablero == 0)
        {
            this.btnTablero1.setBackground(Color.WHITE);
            this.btnTablero1.setForeground(Color.BLACK);
            this.btnTablero3.setBackground(Color.BLACK);
            this.btnTablero3.setForeground(Color.WHITE);
            this.btnTablero2.setBackground(Color.BLACK);
            this.btnTablero2.setForeground(Color.WHITE);
        }
        else if(this.tablero == 1)
        {
            this.btnTablero2.setBackground(Color.WHITE);
            this.btnTablero2.setForeground(Color.BLACK);
            this.btnTablero1.setBackground(Color.BLACK);
            this.btnTablero1.setForeground(Color.WHITE);
            this.btnTablero3.setBackground(Color.BLACK);
            this.btnTablero3.setForeground(Color.WHITE);
        }
        else
        {
            this.btnTablero3.setBackground(Color.WHITE);
            this.btnTablero3.setForeground(Color.BLACK);
            this.btnTablero2.setBackground(Color.BLACK);
            this.btnTablero2.setForeground(Color.WHITE);
            this.btnTablero1.setBackground(Color.BLACK);
            this.btnTablero1.setForeground(Color.WHITE);
        }
    }
    
    // Actualiza el tablero cuando se cambia.
    private void actualizarTablero()
    {
        int indice = 0;
        for(byte y = 0; y < 3; y++)
        {
            for(byte x = 0; x < 3; x++)
            {
                JButton btn = this.listadoBotones.get(indice);
                byte valor = this.juego.getValorCasilla(x, y, this.tablero);
                if(valor == -1){btn.setIcon(imgBotonO);}
                else if(valor == 1){btn.setIcon(imgBotonX);}
                else{btn.setIcon(null);}
                indice++;
            }
        }
    }
    
    // Muestra u oculta las rondas.
    private void mostrarOcultarRondas()
    {
        if(this.numeroRondas == 0)
        {
            this.etiquetaRonda.setVisible(false);
            this.mostrarRonda.setVisible(false);
        }
        else{this.rondaActual = 0;}
    }
    
    // Obtiene el icono correspondiente al jugador.
    public Icon getFicha(){return this.getJugador() ? imgBotonX : imgBotonO;}
    
    public boolean getJugador(){return this.juego.getJugador();}
    
    /**
     * Coloca la ficha si puede.
     * @param x Coordenada X del tablero (Fila).
     * @param y Coordenada Y del tablero (Columna).
     * @return true Si ha podido poner la ficha, false si no.
     */
    public boolean setFicha(byte x, byte y, byte z){return this.juego.control(x, y, z);}
    
    // Actualiza los campos.
    public void refrescar()
    {
        if(this.juego.isFinPartida())
        {
            this.rondaActual++;
            byte ganador = this.juego.getGanador();
            String mensaje;
            if(ganador == -1){this.partidasGanadasJ1++; mensaje = "Gana " + this.nombreJ1;}
            else if(ganador == 1){this.partidasGanadasJ2++; mensaje = "Gana " + this.nombreJ2;}
            else{mensaje = "Empate";}
            this.etiquetaConsola.setText(mensaje);
            this.mostrarCoordenadaGanadora();
            this.btnResetear.setText("¡Otra!");
            
            if(this.rondaActual == numeroRondas)
            {
                String cadena = null;
                if(this.partidasGanadasJ1 > this.partidasGanadasJ2){cadena = "¡Gana " + this.nombreJ1 + "!";}
                else if(this.partidasGanadasJ2 > this.partidasGanadasJ1){cadena = "¡Gana " + this.nombreJ2 + "!";}
                else{cadena = "¡Empate!";}
                
                FinPartida ventanaFinal = new FinPartida(this, true, cadena, this.nombreJ1, this.nombreJ2, this.partidasGanadasJ1, this.partidasGanadasJ2);
                ventanaFinal.setVisible(true);
                
                this.rondaActual = 0;
                this.partidasGanadasJ1 = 0;
                this.partidasGanadasJ2 = 0;
            }
        }
        else
        {
            this.etiquetaTurno.setText(Integer.toString(this.juego.getTurno()));
            this.etiquetaJugador.setText(this.juego.getJugador() ? this.nombreJ1 + " (O)" : this.nombreJ2 + " (X)");
            this.etiquetaRonda.setText(Integer.toString(this.rondaActual+1) + "/" + Integer.toString(this.numeroRondas));
        }
    }
    
    // Muestra las coordenadas ganadoras.
    private void mostrarCoordenadaGanadora()
    {
        if(this.juego.isFinPartida())
        {
            if(this.tablero == this.juego.getTableroGanador() || this.juego.getTableroGanador() == 3)
            {
                // Para mostrar columnas 3D ganadoras en diferentes tableros.
                if(this.juego.getTableroGanador() == 3)
                {
                    switch(this.juego.getCoordenadaGanadora())
                    {
                        case 6:
                            this.btn1.setBackground(this.colorGanador);
                        break;
                        case 7:
                            this.btn2.setBackground(this.colorGanador);
                        break;
                        case 8:
                            this.btn3.setBackground(this.colorGanador);
                        break;
                        case 9:
                            this.btn4.setBackground(this.colorGanador);
                        break;
                        case 10:
                            this.btn5.setBackground(this.colorGanador);
                        break;
                        case 11:
                            this.btn6.setBackground(this.colorGanador);
                        break;
                        case 12:
                            this.btn7.setBackground(this.colorGanador);
                        break;
                        case 13:
                            this.btn8.setBackground(this.colorGanador);
                        break;
                        case 14:
                            this.btn9.setBackground(this.colorGanador);
                        break;
                        case 15:
                            this.borrarTodosMarcados();
                            if(this.tablero == 0){this.btn1.setBackground(this.colorGanador);}
                            if(this.tablero == 1){this.btn5.setBackground(this.colorGanador);}
                            if(this.tablero == 2){this.btn9.setBackground(this.colorGanador);}
                        break;
                        case 16:
                            this.borrarTodosMarcados();
                            if(this.tablero == 0){this.btn2.setBackground(this.colorGanador);}
                            if(this.tablero == 1){this.btn5.setBackground(this.colorGanador);}
                            if(this.tablero == 2){this.btn8.setBackground(this.colorGanador);}
                        break;
                        case 17:
                            this.borrarTodosMarcados();
                            if(this.tablero == 0){this.btn3.setBackground(this.colorGanador);}
                            if(this.tablero == 1){this.btn5.setBackground(this.colorGanador);}
                            if(this.tablero == 2){this.btn7.setBackground(this.colorGanador);}
                        break;
                        case 18:
                            this.borrarTodosMarcados();
                            if(this.tablero == 0){this.btn6.setBackground(this.colorGanador);}
                            if(this.tablero == 1){this.btn5.setBackground(this.colorGanador);}
                            if(this.tablero == 2){this.btn4.setBackground(this.colorGanador);}
                        break;
                        case 19:
                            this.borrarTodosMarcados();
                            if(this.tablero == 0){this.btn9.setBackground(this.colorGanador);}
                            if(this.tablero == 1){this.btn5.setBackground(this.colorGanador);}
                            if(this.tablero == 2){this.btn1.setBackground(this.colorGanador);}
                        break;
                        case 20:
                            this.borrarTodosMarcados();
                            if(this.tablero == 0){this.btn8.setBackground(this.colorGanador);}
                            if(this.tablero == 1){this.btn5.setBackground(this.colorGanador);}
                            if(this.tablero == 2){this.btn2.setBackground(this.colorGanador);}
                        break;
                        case 21:
                            this.borrarTodosMarcados();
                            if(this.tablero == 0){this.btn7.setBackground(this.colorGanador);}
                            if(this.tablero == 1){this.btn5.setBackground(this.colorGanador);}
                            if(this.tablero == 2){this.btn3.setBackground(this.colorGanador);}
                        break;
                        case 22:
                            this.borrarTodosMarcados();
                            if(this.tablero == 0){this.btn4.setBackground(this.colorGanador);}
                            if(this.tablero == 1){this.btn5.setBackground(this.colorGanador);}
                            if(this.tablero == 2){this.btn6.setBackground(this.colorGanador);}
                        break;
                        
                        case 23:
                            this.borrarTodosMarcados();
                            if(this.tablero == 0){this.btn1.setBackground(this.colorGanador);}
                            if(this.tablero == 1){this.btn2.setBackground(this.colorGanador);}
                            if(this.tablero == 2){this.btn3.setBackground(this.colorGanador);}
                        break;
                        case 24:
                            this.borrarTodosMarcados();
                            if(this.tablero == 0){this.btn1.setBackground(this.colorGanador);}
                            if(this.tablero == 1){this.btn4.setBackground(this.colorGanador);}
                            if(this.tablero == 2){this.btn7.setBackground(this.colorGanador);}
                        break;
                        case 25:
                            this.borrarTodosMarcados();
                            if(this.tablero == 0){this.btn3.setBackground(this.colorGanador);}
                            if(this.tablero == 1){this.btn6.setBackground(this.colorGanador);}
                            if(this.tablero == 2){this.btn9.setBackground(this.colorGanador);}
                        break;
                        case 26:
                            this.borrarTodosMarcados();
                            if(this.tablero == 0){this.btn3.setBackground(this.colorGanador);}
                            if(this.tablero == 1){this.btn2.setBackground(this.colorGanador);}
                            if(this.tablero == 2){this.btn1.setBackground(this.colorGanador);}
                        break;
                        case 27:
                            this.borrarTodosMarcados();
                            if(this.tablero == 0){this.btn9.setBackground(this.colorGanador);}
                            if(this.tablero == 1){this.btn8.setBackground(this.colorGanador);}
                            if(this.tablero == 2){this.btn7.setBackground(this.colorGanador);}
                        break;
                        case 28:
                            this.borrarTodosMarcados();
                            if(this.tablero == 0){this.btn9.setBackground(this.colorGanador);}
                            if(this.tablero == 1){this.btn6.setBackground(this.colorGanador);}
                            if(this.tablero == 2){this.btn3.setBackground(this.colorGanador);}
                        break;
                        case 29:
                            this.borrarTodosMarcados();
                            if(this.tablero == 0){this.btn7.setBackground(this.colorGanador);}
                            if(this.tablero == 1){this.btn4.setBackground(this.colorGanador);}
                            if(this.tablero == 2){this.btn1.setBackground(this.colorGanador);}
                        break;
                        case 30:
                            this.borrarTodosMarcados();
                            if(this.tablero == 0){this.btn7.setBackground(this.colorGanador);}
                            if(this.tablero == 1){this.btn8.setBackground(this.colorGanador);}
                            if(this.tablero == 2){this.btn9.setBackground(this.colorGanador);}
                        break;
                    }
                }
                // Para mostrar filas/columnas ganadoras en un solo tablero definido.
                else if(this.juego.getTableroGanador() < 3)
                {
                    switch(this.juego.getCoordenadaGanadora())
                    {
                        case -1:
                            this.btn1.setBackground(this.colorGanador); btn2.setBackground(colorGanador); this.btn3.setBackground(colorGanador);
                        break;
                        case -2:
                            this.btn4.setBackground(this.colorGanador); btn5.setBackground(colorGanador); this.btn6.setBackground(colorGanador);
                        break;
                        case -3:
                            this.btn7.setBackground(this.colorGanador); btn8.setBackground(colorGanador); this.btn9.setBackground(colorGanador);
                        break;
                        case 1:
                            this.btn1.setBackground(this.colorGanador); btn4.setBackground(colorGanador); this.btn7.setBackground(colorGanador);
                        break;
                        case 2:
                            this.btn2.setBackground(this.colorGanador); btn5.setBackground(colorGanador); this.btn8.setBackground(colorGanador);
                        break;
                        case 3:
                            this.btn3.setBackground(this.colorGanador); btn6.setBackground(colorGanador); this.btn9.setBackground(colorGanador);
                        break;
                        case 4:
                            this.btn7.setBackground(this.colorGanador); btn5.setBackground(colorGanador); this.btn3.setBackground(colorGanador);
                        break;
                        case 5:
                            this.btn9.setBackground(this.colorGanador); btn5.setBackground(colorGanador); this.btn1.setBackground(colorGanador);
                        break;

                        // En el caso de empate pinta todo.
                        default:
                            for(JButton btn: this.listadoBotones)
                            {
                                btn.setBackground(colorGanador);
                            }
                    }
                }
            }
            else if(this.juego.getTableroGanador() == -1)
            {
                // Caso de empate general.
                for(JButton btn: this.listadoBotones)
                {
                    btn.setBackground(colorGanador);
                }
            }
            else{this.borrarTodosMarcados();}
        }
    }
    
    // Permite borrar todas las casillas de la jugada ganada.
    private void borrarTodosMarcados()
    {
        for(JButton btn: this.listadoBotones)
        {
            btn.setBackground(Color.WHITE);
        }
    }
    
    // Establece un array con todos los botones del tablero.
    private void setListadoBotones()
    {
        this.listadoBotones.add(btn1);
        this.listadoBotones.add(btn2);
        this.listadoBotones.add(btn3);
        this.listadoBotones.add(btn4);
        this.listadoBotones.add(btn5);
        this.listadoBotones.add(btn6);
        this.listadoBotones.add(btn7);
        this.listadoBotones.add(btn8);
        this.listadoBotones.add(btn9);
    }
    
    // Restablece todos los valores por defecto.
    private void resetearTablero()
    {
        if(this.juego.getTurno() != 0)
        {
            this.juego.resetearTablero();
            for(JButton btn: this.listadoBotones)
            {
                btn.setEnabled(true);
                btn.setIcon(null);
                btn.setBackground(Color.WHITE);
            }
            this.etiquetaConsola.setText("...");
            this.lbJugador.setText("Te toca: ");
            this.refrescar();
        }
        else{System.out.println("No puedes resetear el tablero ahora");}
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnResetear;
    private javax.swing.JButton btnResetear1;
    private javax.swing.JButton btnTablero1;
    private javax.swing.JButton btnTablero2;
    private javax.swing.JButton btnTablero3;
    private javax.swing.JLabel etiquetaConsola;
    private javax.swing.JLabel etiquetaJugador;
    private javax.swing.JLabel etiquetaRonda;
    private javax.swing.JLabel etiquetaTurno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelInferior;
    private javax.swing.JPanel jPanelSuperior;
    private javax.swing.JPanel jPanelTablero;
    private javax.swing.JLabel lbJugador;
    private javax.swing.JLabel mostrarRonda;
    // End of variables declaration//GEN-END:variables
}
